apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

// Uses JDK 7
sourceCompatibility = 1.7
targetCompatibility = 1.7

war {
	archiveName = projectName+'.war'
	}

project.ext {
	organization = 'www.kasun.com'
	productName = 'SpringMVC'
	moduleName = 'Undefined'
	moduleType = 'Undefined'
	deployDir = System.getenv()['deploy_in_tomcat'] + "/webapps"
}

// 1. Get dependencies from Maven local repository
// 2. Get dependencies from Maven central repository
repositories {
	mavenLocal()
    mavenCentral()
}

//Project dependencies
dependencies {
	compile 'org.springframework:spring-webmvc:' + springVersion,
			'org.springframework:spring-jdbc:' + springJDBCVersion,
			'org.springframework:spring-tx:4.0.7.RELEASE',
			'log4j:log4j:' + log4jVersion,
			'org.slf4j:slf4j-log4j12:' + slf4jVersion,
			'mysql:mysql-connector-java:' + mysqlJavaConnectorVersion,
			'org.codehaus.jackson:jackson-mapper-asl:' + jacksonVersion,
			'jstl:jstl:1.2'
			
	//include in compile only, exclude in the war
	providedCompile 'javax.servlet:servlet-api:2.5'
}

task deploy << {
	
		deleteWar()
		deployApp()
	}

def deleteWar(){
	
	println "Cleaning tomcat webapps directory"
	ant.delete() {
			fileset(dir: file("${deployDir}/"))
		}//includes: createNamePrefix(project) 
		ant.delete(dir: "${deployDir}/"+projectName)
	println ("Deleted "+projectName)
}

def deployApp() {
	
	copy {
		from war // could be exploded or war itself
		into "${deployDir}"
	}
		println "Coppied and Deployed "
	}

def createNamePrefix(project) {
	return project.productName.toLowerCase()
}
